{"version":3,"sources":["API/api.js","components/DetailsMovie/DetailsMovie.module.css","components/DetailsMovie/DetailsMovie.jsx"],"names":["axios","require","defaults","baseURL","params","api_key","fetchTrend","a","page","get","data","fetchSearch","search","fetchDetail","id","fetchCast","fetchReview","module","exports","AsyncComponentCast","lazy","AsyncComponentReview","DetailsMovie","useRouteMatch","useState","dataFetchDetail","setDataFetchDetail","currentId","pathLc","setPathLc","useEffect","path","localStorage","getItem","getDetailArray","length","console","error","getDetailReqAsync","idLinksCheck","setIdLinksCheck","handleCastAndReview","e","Number","target","genres","backdrop_path","original_title","release_date","popularity","overview","imdb_id","textArea","to","className","s","detail__wrapper","alt","src","width","height","detail_h2","slice","detail_h4","detail_h3","detail_h3_list","map","name","div_links","onClick","link","activeStyle","color","url","exact","warning","warning__h1"],"mappings":"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","file":"static/js/DetailsMovie.ceb87ed2.chunk.js","sourcesContent":["const axios = require('axios');\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKey = '78f2432cb0b978404715fbeff43c36be';\n\naxios.defaults.params = {\n  api_key: apiKey,\n};\n\nconst fetchTrend = async (page = 1) => {\n  const { data } = await axios.get(`/trending/all/day?page=${page}`);\n  return data;\n};\n\nconst fetchSearch = async (search, page = 1) => {\n  const { data } = await axios.get(\n    `/search/movie?language=en-US&page=${page}&include_adult=false&query=${search}`,\n  );\n  return data;\n};\n\nconst fetchDetail = async id => {\n  const { data } = await axios.get(`/movie/${id}?language=en-US`);\n  return data;\n};\n\nconst fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n  return data;\n};\n\nconst fetchReview = async (id, page = 1) => {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=${page}`,\n  );\n  return data;\n};\n\nexport { fetchTrend, fetchSearch, fetchDetail, fetchCast, fetchReview };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail_h2\":\"DetailsMovie_detail_h2__kbrQM\",\"detail_h4\":\"DetailsMovie_detail_h4__V07OU\",\"detail_h3\":\"DetailsMovie_detail_h3__1QcKX\",\"detail__wrapper\":\"DetailsMovie_detail__wrapper__1mcCL\",\"detail_h3_list\":\"DetailsMovie_detail_h3_list__38FRJ\",\"div_links\":\"DetailsMovie_div_links__2ZEpU\",\"link\":\"DetailsMovie_link__3IVAw\",\"warning\":\"DetailsMovie_warning__1Cx_2\",\"warning__h1\":\"DetailsMovie_warning__h1__2yXo9\"};","import s from './DetailsMovie.module.css';\nimport { fetchDetail } from '../../API/api';\nimport { useEffect, useState, lazy, Suspense } from 'react';\nimport { useRouteMatch, NavLink, Route } from 'react-router-dom';\nimport Button from '../Button/Button';\nconst AsyncComponentCast = lazy(() =>\n  import('../Cast/Cast.jsx' /* webpackChunkName: \"Cast\" */),\n);\nconst AsyncComponentReview = lazy(() =>\n  import('../Review/Review' /* webpackChunkName: \"Review\" */),\n);\n\nfunction DetailsMovie() {\n  const id = useRouteMatch();\n  const [dataFetchDetail, setDataFetchDetail] = useState([]);\n  const currentId = id.params.id;\n  const [pathLc, setPathLc] = useState('/');\n\n  useEffect(() => {\n    const path = localStorage.getItem('path');\n    if (path === null) {\n      return;\n    }\n    setPathLc(path);\n  }, []);\n\n  useEffect(() => {\n    async function getDetailReqAsync() {\n      try {\n        const getDetailArray = await fetchDetail(currentId);\n\n        if (getDetailArray === null || getDetailArray.length === 0) {\n          return;\n        }\n\n        setDataFetchDetail(getDetailArray);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getDetailReqAsync();\n  }, [currentId]);\n\n  const [idLinksCheck, setIdLinksCheck] = useState(null);\n\n  const handleCastAndReview = e => {\n    const id = Number(e.target.id);\n    setIdLinksCheck(id);\n  };\n\n  const {\n    genres,\n    backdrop_path,\n    original_title,\n    release_date,\n    popularity,\n    overview,\n    imdb_id,\n  } = dataFetchDetail;\n\n  return (\n    <>\n      {genres && <Button textArea={`back to list`} to={pathLc} />}\n      {genres && (\n        <>\n          <div className={s.detail__wrapper}>\n            <img\n              alt=\"s\"\n              src={`https://image.tmdb.org/t/p/w500/${backdrop_path}`}\n              width=\"500px\"\n              height=\"300px\"\n            />\n            <h2 className={s.detail_h2}>\n              {original_title} {release_date.slice(0, 4)}\n            </h2>\n            <h4 className={s.detail_h4}>User score : {popularity}</h4>\n            <h3 className={s.detail_h3}>Overview {overview}</h3>\n\n            <h3 className={s.detail_h3_list}>Genres</h3>\n            <ul>\n              {genres.map(({ name }) => {\n                return <li key={name}>{name}</li>;\n              })}\n            </ul>\n            <div className={s.div_links}>\n              <h3 className={s.detail_h3_list}>Additional information</h3>\n              <span>\n                <NavLink\n                  id=\"1\"\n                  onClick={e => handleCastAndReview(e)}\n                  className={s.link}\n                  activeStyle={\n                    idLinksCheck === 1 ? { color: 'red' } : { color: 'blue' }\n                  }\n                  to={`${id.url}`}\n                >\n                  Cast\n                </NavLink>\n              </span>\n              <span>\n                <NavLink\n                  id=\"2\"\n                  onClick={e => handleCastAndReview(e)}\n                  className={s.link}\n                  activeStyle={\n                    idLinksCheck === 2 ? { color: 'red' } : { color: 'blue' }\n                  }\n                  to={`${id.url}`}\n                >\n                  Reviews\n                </NavLink>\n              </span>\n            </div>\n          </div>\n        </>\n      )}\n\n      <Suspense>\n        <Route exact path={`/movies/:id`}>\n          {idLinksCheck === 1 ? <AsyncComponentCast id={imdb_id} /> : null}\n          {idLinksCheck === 2 ? <AsyncComponentReview id={currentId} /> : null}\n        </Route>\n      </Suspense>\n\n      {!genres && (\n        <div className={s.warning}>\n          <h1 className={s.warning__h1}>\n            We do not have details information about this film\n            {\n              <>\n                <Button textArea={`back to list`} to={pathLc} />\n              </>\n            }\n          </h1>\n        </div>\n      )}\n    </>\n  );\n}\nexport default DetailsMovie;\n"],"sourceRoot":""}